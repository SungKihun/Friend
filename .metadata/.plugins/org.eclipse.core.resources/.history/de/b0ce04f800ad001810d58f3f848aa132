package com.example.controller;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.Map;

import javax.persistence.criteria.Predicate;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;

import com.example.model.User;
import com.example.repository.FriendsRepository;
import com.example.repository.UserInterestRepository;
import com.example.repository.UserRepository;
import com.example.service.FriendService;

@RestController
@RequestMapping("/friends")
@CrossOrigin(origins = "http://192.168.0.26:3001", maxAge = 3600)
public class FriendsController {
	@Autowired
	private FriendService friendService;
	@Autowired
	private FriendsRepository friendRepository;
	@Autowired
	private UserInterestRepository userInterestRepository;
	@Autowired
	private UserRepository userRepository;
	
	@RequestMapping()
//	public List<Map<String, Object>> SearchFriends() {
	public List<User> FriendFilter(
			@RequestParam(value="filter", defaultValue="0") Boolean filter,
			@RequestParam(value="si", defaultValue="0") Integer city,
			@RequestParam(value="gu", defaultValue="0") Integer gu,
			@RequestParam(value="gender", defaultValue="2") Integer gender,
			@RequestParam(value="minAge", defaultValue="0") Integer minAge,
			@RequestParam(value="maxAge", defaultValue="0") Integer maxAge,
			@RequestParam(value="interest", defaultValue="0") Integer interest) {
		System.out.println("-----------------------");
		System.out.println(filter);
		System.out.println(city);
		System.out.println(gu);
		System.out.println(gender);
		System.out.println(minAge);
		System.out.println(maxAge);
		System.out.println(interest);
		System.out.println("-----------------------");
		if(filter) {
			System.out.println("filter=true");
//			System.out.println(userInterestRepository.seqByCode(interest));
			System.out.println("SearchFriends "+friendService.SearchFriends(city, gu, gender, minAge, maxAge));
//			if(filter) {
//				System.out.println("SearchFriends");
//				System.out.println(""+city+gu+gender+minAge+maxAge);
//				System.out.println("interest "+interest);
//				friendService.SearchFriends(city, gu, gender, minAge, maxAge);
//				System.out.println(userInterestRepository.seqByCode(interest));
//				List<Integer> userList = userInterestRepository.seqByCode(interest);
//				List<User> likeUser = new ArrayList<>();
//				
//				return null;
//			}
			return friendService.SearchFriends(city, gu, gender, minAge, maxAge);
		}
		System.out.println("filter=false");
		return userRepository.findAll();
	}
}
