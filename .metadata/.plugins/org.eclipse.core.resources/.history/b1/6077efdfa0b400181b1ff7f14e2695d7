buildscript {
	ext {
		springBootVersion = '2.0.4.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

apply plugin: 'java'
apply plugin: 'eclipse-wtp'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'war'

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
	mavenCentral()
}

configurations {
	providedRuntime
}

dependencies {
	compile('org.springframework.boot:spring-boot-starter')
	compile('org.springframework.boot:spring-boot-starter-data-jpa')
	compile('org.springframework.boot:spring-boot-starter-web')
	compile('org.springframework.boot:spring-boot-starter-aop')
	providedRuntime('org.springframework.boot:spring-boot-starter-tomcat')
	testCompile('org.springframework.boot:spring-boot-starter-test')
	//QueryDSL
	compile('com.querydsl:querydsl-core')
	compile('com.querydsl:querydsl-apt')
	compile('com.querydsl:querydsl-jpa')
}

sourceSets {
	generated {
		java {
			srcDirs =  ["src/main/generated"]
		}
	}
}

configurations {
	querydslapt <== 위에 compile 부분에 선언하고 여기와 같이 선언함으로써 gradle에서 마법과 같이 많은 처리를 해주는 task와 연결되게 해 준다
}

task generateQueryDSL(type: JavaCompile, group: 'build', description: 'Query dsl Generator') {
	source = sourceSets.main.java
	classpath = configurations.compile + configurations.querydslapt
	options.compilerArgs = [
			"-proc:only",
			"-processor", "com.querydsl.apt.jpa.JPAAnnotationProcessor"
	]
	options.encoding = 'UTF-8'
	destinationDir = sourceSets.generated.java.srcDirs.iterator().next()
}

compileJava {
	dependsOn generateQueryDSL
	source generateQueryDSL.destinationDir
}

compileGeneratedJava {
	dependsOn generateQueryDSL
	options.warnings = false
	classpath += sourceSets.main.runtimeClasspath
}

clean {
	delete sourceSets.generated.java.srcDirs.iterator().next()
}